<launch>
  <arg name="paused"       default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui"          default="true"/>
  <arg name="headless"     default="false"/>
  <arg name="debug"        default="false"/>

  <arg name="visualize"    default="false"/> <!-- LiDAR laser visualization flag -->
  <arg name="rviz"         default="false"/>
  <arg name="urdf_file" default="$(find xacro)/xacro '$(find sobit_mini_description)/robots/sobit_mini.urdf.xacro'" />

  <param name="robot_description" command="$(arg urdf_file) visualize:=$(arg visualize)" />

  <!-- Load Gazebo ROS package -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_stage_1.world"/> -->
    <arg name="paused"       value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui"          value="$(arg gui)"/>
    <arg name="headless"     value="$(arg headless)"/>
    <arg name="debug"        value="$(arg debug)"/>
  </include>

  <!-- Spawn a URDF robot into Gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
  		args="-urdf -model sobit_mini -param robot_description"/>
  
  <!-- Load Gazebo controllers -->
  <rosparam file = "$(find sobit_mini_gazebo)/config/controllers.yaml" command = "load"/>


  <!-- Load Poses -->
  <rosparam command="load" file="$(find sobit_mini_library)/config/sobit_mini_pose.yaml"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find sobit_mini_control)/config/joint_limit.yaml" command="load"/>

  <!-- Load the controllers -->
  <rosparam file="$(find sobit_mini_control)/config/state_control_arm.yaml"  command="load"/>
  <rosparam file="$(find sobit_mini_control)/config/state_control_head.yaml" command="load"/>
  <rosparam file="$(find sobit_mini_control)/config/state_control_body.yaml" command="load"/>

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
        args="joint_state_controller"/>
  <node name="controller_arm" pkg="controller_manager" type="spawner" respawn="false" output="screen"
        args="r_arm_trajectory_controller
              l_arm_trajectory_controller
              head_trajectory_controller
              body_trajectory_controller"/>

  <!-- Load joint state publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>


  <!-- Visualize robot in RViz -->
  <group if="$(arg rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find sobit_mini_gazebo)/rviz/display.rviz"/>
  </group>

  <!-- Load initial pose -->
  <node pkg="sobit_mini_gazebo" name="initial_pose" type="pose.py" />
  
</launch>